<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhs.mapper.TtRolePermissionMapper" >
  <resultMap id="BaseResultMap" type="com.zhs.pojo.TtRolePermission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="resourcesId" property="resourcesid" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
    <result column="disable" property="disable" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, roleId, resourcesId, createtime, updatetime, ext1, ext2,disable
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from telnet_role_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from telnet_role_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhs.pojo.TtRolePermission" >
    insert into telnet_role_permission (id, roleId, resourcesId, 
      createtime, updatetime, ext1, 
      ext2,disable)
    values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{resourcesid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{ext1,jdbcType=VARCHAR}, 
      #{ext2,jdbcType=VARCHAR},#{disable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhs.pojo.TtRolePermission" >
    insert into telnet_role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="resourcesid != null" >
        resourcesId,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
      <if test="disable != null" >
        disable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="resourcesid != null" >
        #{resourcesid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="disable != null" >
        #{disable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhs.pojo.TtRolePermission" >
    update telnet_role_permission
    <set >
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="resourcesid != null" >
        resourcesId = #{resourcesid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="disable != null" >
        #{disable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhs.pojo.TtRolePermission" >
    update telnet_role_permission
    set roleId = #{roleid,jdbcType=INTEGER},
      resourcesId = #{resourcesid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      disable = #{disable,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 删除角色相关的权限-->
  <select id="delURolePermission" resultType="com.zhs.pojo.TtRolePermission"  parameterType="java.lang.Integer">
    UPDATE telnet_role_permission set `disable`=1 where id=#{id,jdbcType=INTEGER}
  </select>

  <!-- 恢复角色相关的权限-->
  <select id="huifuURolePermission" resultType="com.zhs.pojo.TtRolePermission"  parameterType="java.lang.Integer">
    UPDATE telnet_role_permission set `disable`=0 where id=#{id,jdbcType=INTEGER}
  </select>
  <!--根据角色id查找该角色的所有权限-->
<select id="selPermissinByRoleId" resultType="com.zhs.pojo.TtRolePermission"  parameterType="java.lang.Integer">
  select  * from telnet_role_permission where  disable= 0 and roleId=#{resourcesId,jdbcType=INTEGER}
</select>
  <!--根据角色id查找该角色的所有权限-->
  <select id="selPermissinByRourseId" resultType="com.zhs.pojo.TtRolePermission"  parameterType="java.lang.Integer">
  select  * from telnet_role_permission where disable=0 and resourcesId=#{resourcesId,jdbcType=INTEGER}
</select>
</mapper>